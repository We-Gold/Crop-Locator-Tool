import{g as e,d as t,a as r,b as a,p as n,I as i}from"./vendor.6053f2ee.js";const o=new e.exports.GPU({mode:"gpu"});function s(e,t,r){return e+r*t}function h(e,t,r,a,n,i,o,h){let c=0;for(let l=r;l<r+i;l+=h)for(let d=a;d<a+o;d+=h){const o=s(l,d,n),h=s(l-r,d-a,i),u=e[o],g=t[h];c+=Math.abs(u-g)}return c}o.addFunction(s),o.addFunction(h);const c=(e,t,r)=>{const a=Math.trunc(Math.abs(e.data[0].imageWidth-t.data[0].imageWidth)/r),n=Math.trunc(Math.abs(e.data[0].imageLength-t.data[0].imageLength)/r);return o.createKernel((function(e,t,r){const[a,n,i,o]=r;return h(e,t,this.thread.x*o,this.thread.y*o,a,n,i,o)})).setOutput([a,n])},l=(e,t,r)=>Math.min(Math.max(e,t),r),d=(e,t,r,a)=>{const{useEveryXPixel:n,useEveryXLayer:i}=a(),o=Math.abs(e.data[0].imageWidth-t.data[0].imageWidth),s=l(r.x-n,0,o),h=l(r.x+n,0,o)-s,c=Math.abs(e.data[0].imageLength-t.data[0].imageLength),d=l(r.y-n,0,c),u=l(r.y+n,0,c)-d,g=Math.abs(e.data.length-t.data.length),m=l(r.z-i,0,g);return{xScanStart:s,xAxisScans:h,yScanStart:d,yAxisScans:u,zScanStart:m,zAxisScans:l(r.z+i,0,g)-m}},u=(e,t,r,a)=>{const{xAxisScans:n,yAxisScans:i}=d(e,t,r,a);return o.createKernel((function(e,t,r){const[a,n,i,o,s,c]=r;return h(e,t,this.thread.x+s,this.thread.y+c,a,n,i,o)})).setOutput([n,i])},g=(e,t,r,a=0,n=0)=>{const i=e.data[0],o=t.data[0];return[i.imageWidth,o.imageWidth,o.imageLength,r,a,n]},m=({result:e,crop:t,convertPosition:r,threshold:a=.1})=>{const{useEveryXPixel:n,useEveryXLayer:i}=r(),o=(({threshold:e=.1,cropWidth:t,cropHeight:r,range:a=[0,255],useEveryXPixel:n})=>e*Math.abs(a[0]-a[1])*Math.trunc(t/n*r/n))({threshold:a,cropWidth:t.data[0].imageWidth,cropHeight:t.data[0].imageLength,useEveryXPixel:n,useEveryXLayer:i}),s=[];for(const[h,c]of Object.entries(e))for(const[e,t]of Object.entries(c))for(const[r,a]of Object.entries(t))if(a<o){const t=[h,e,r].map((e=>parseInt(e)));s.push({difference:a,index:t})}if(0==s.length)return null;return s.map((e=>{const t=e.index;return Object.assign(r({x:t[2],y:t[1],z:t[0]}),{difference:e.difference})}))},y=(e,t,{useEveryXPixel:r,useEveryXLayer:a,threshold:n})=>{const[i,o]=((e,t,{useEveryXLayer:r,useEveryXPixel:a})=>{const n=c(e,t,a),i=g(e,t,a),o=Math.abs(e.data.length-t.data.length);let s=[];for(let h=0;h<=o;h+=r){const r=e.data[h],a=t.data[0];s.push(n(r.data,a.data,i))}return[s,(e=null)=>null==e?{useEveryXPixel:a,useEveryXLayer:r}:{x:e.x*a,y:e.y*a,z:e.z*r}]})(e,t,{useEveryXPixel:r,useEveryXLayer:a});return[m({result:i,crop:t,convertPosition:o,threshold:n}),o,i]},p=(e,t,r,a,{useEveryXPixel:n,useEveryXLayer:i,threshold:o})=>{const[s,h]=((e,t,r,a,{useEveryXLayer:n,useEveryXPixel:i})=>{const o=r.map((r=>u(e,t,r,a))).map(((o,s)=>{const{zScanStart:h,zAxisScans:c,xScanStart:l,yScanStart:u}=d(e,t,r[s],a),m=g(e,t,i,l,u);let y=[];for(let r=h;r<=h+c;r+=n){const a=e.data[r],n=t.data[0];y.push(o(a.data,n.data,m))}return y})),{zScanStart:s,xScanStart:h,yScanStart:c}=d(e,t,r[0],a);return[o,(e=null)=>null==e?{useEveryXPixel:i,useEveryXLayer:n}:{x:e.x*i+h,y:e.y*i+c,z:e.z*n+s}]})(e,t,r,a,{useEveryXPixel:n,useEveryXLayer:i});return[s.map((e=>m({result:e,crop:t,convertPosition:h,threshold:o}))).reduce(((e,t)=>e.concat(t)),[]),h,s]},f=e=>e.reduce(((e,t)=>null==t?e:t.difference<e.difference?t:e),{difference:Number.MAX_VALUE}),v=(e,t,r=!1)=>{const a=((e,t)=>{const r=[];return null!=e&&null!=e||r.push("The source image provided is not defined"),null!=t&&null!=t||r.push("The cropped image provided is not defined"),(e.data.length<t.data.length||e.data[0].imageWidth<t.data[0].imageWidth||e.data[0].imageLength<t.data[0].imageLength)&&r.push("The source image provided is smaller than the cropped image"),r})(e,t);if(a.length>0)return{errors:a};console.time("pipeline");const{errors:n,pipeline:i,positions:o,bestPosition:s}=((e,t,r)=>{const a=[];for(const[n,i]of r.entries()){const{useEveryXPixel:r,useEveryXLayer:o,threshold:s}=i;if(0===n){const[n,i,h]=y(e,t,{useEveryXPixel:r,useEveryXLayer:o,threshold:s});a.push([n,i,h]);continue}if(null==a[n-1][0]||0===a[n-1][0].length)return{errors:["No match found"]};if(!a[n-1][0].some((e=>null!=e)))return{errors:["No match found"]};const h=[f(a[n-1][0])],[c,l,d]=p(e,t,h,a[n-1][1],{useEveryXPixel:r,useEveryXLayer:o,threshold:s});a.push([c,l,d])}return{pipeline:a,positions:a[a.length-1],bestPosition:f(a[a.length-1][0])}})(e,t,r?[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.06},{useEveryXPixel:1,useEveryXLayer:1,threshold:.03}]:[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.07},{useEveryXPixel:1,useEveryXLayer:1,threshold:.01}]);return console.timeEnd("pipeline"),{errors:n,pipeline:i,positions:o,bestPosition:s}},x=e=>{null!=e&&null!=e&&e.forEach((e=>(e=>{console.error(e),alert(e)})(e)))},E=async({imagePath:e=null,arrayBuffer:n=null,getImageDimensions:i=null})=>{if(null==e&&null==n)return{errors:["No image provided"]};if(null!=e){const t=(e=>{const t=[];return null!=e&&null!=e||t.push("No image path provided"),t})(e);if(0!=t.length)return{errors:t};n=await(async e=>{const t=await r.get(e,{responseType:"arraybuffer"});return a.Buffer.from(t.data,"utf-8")})(e)}let o;try{o=t(n)}catch(s){return{errors:["An image provided is not a tiff. Currently this tool only accepts tiffs."]}}return{data:o}},L=({errorHandler:e=x,callback:t})=>async r=>{const a=r.target.files[0],n=await a.arrayBuffer(),{data:i,errors:o}=await E({arrayBuffer:n,getImageDimensions:async()=>{const e=window.URL.createObjectURL(a);return await(e=>new Promise((t=>{const r=new Image;r.onload=()=>{t({imageHeight:r.height,imageWidth:r.width})},r.src=e})))(e)}});e(o),null!=i&&t({data:i,dimensions:{width:i[0].imageWidth,height:i[0].imageLength}})},X=(e,t,r,{strokeColor:a="rgb(64, 196, 82)",highlightColor:n="rgba(64, 196, 82, 0.3)"}={})=>{const i=e.getContext("2d");i.fillStyle=n,i.strokeStyle=a;const{x:o,y:s}=t,{w:h,h:c}=r;i.fillRect(o,s,h,c),i.strokeRect(o,s,h,c)},w=({imageData:e,width:t,height:r,canvasElement:a,imageRange:i=[0,255],colorScale:o="greys"})=>{const s=new n({canvas:a,data:e,width:t,height:r,domain:i,colorScale:o,useWebGL:!1});return s.render(),s};function P(e,t,r){return e+r*t}const S=(e,t,r,a)=>{let n=new i(t,r,e,{kind:"GREY"});return n=n.rotate(-a,{interpolation:"bilinear"}),n},b=(e,t)=>{const r=e.parent.width,a=Math.abs(r*Math.sin(M(t))),n=a/(Math.abs(r*Math.cos(M(t)))+a)*r,i=n*Math.cos(M(t)),o=a-n*Math.sin(M(t)),s=e.width-o-i,h=e.height-i-o;return e=e.crop({x:i,y:o,width:s,height:h})},M=e=>e*Math.PI/180,W=(e,t)=>(e.imageWidth=e.width,e.imageLength=e.height,Array.from({length:t},(t=>e))),z={sourceImage:null,crop:null},R=()=>{if(null==z.sourceImage||null==z.crop)return;console.log(z);const{isRotated:e,angle:t}=(e=>{const{data:t,imageWidth:r,imageLength:a}=e.data[0],n=t[P(0,0,r)],i=t[P(r,0,r)],o=t[P(0,a-1,r)],s=t[P(r-1,a-1,r)];if(0!==n||0!==i||0!==o||0!==s)return{isRotated:!1};let h=r;for(let g=r-1;g>=0&&0===t[P(g-1,0,r)];g--)h=g;let c=0;for(let g=1;g<=a&&0===t[P(r-1,g,r)];g++)c=g;if(h===r&&0===c)return{isRotated:!1};const l=r-h,d=.5*l*c;let u=0;for(let g=h;g<r;g++)for(let e=0;e<c;e++)0===t[P(g,e,r)]&&u++;return u/d<.45?{isRotated:!1}:{isRotated:!0,angle:180*Math.atan(c/l)/Math.PI}})(z.crop);if(e){const r=z.crop.data[0],a=((e,t,r,a,n=1)=>{let i=S(e,t,r,a);return i=b(i,a),W(i,n)})(r.data,r.imageWidth,r.imageLength,t,z.crop.data.length);z.crop={data:a,dimensions:z.crop.dimensions,angle:t,isRotated:e}}const r=document.querySelector("#crop-canvas"),a=z.crop.data[0];w({imageData:a.data,width:a.imageWidth,height:a.imageLength,canvasElement:r});const{errors:n,bestPosition:i}=v(z.sourceImage,z.crop,e);x(n);const o=document.querySelector("#source-image-canvas"),s=z.sourceImage.data[0];if(w({imageData:s.data,width:s.imageWidth,height:s.imageLength,canvasElement:o}),null!=n&&n.length>0)return;const h={x:i.x,y:i.y,z:i.z+1};z.crop.position=h;const c=z.sourceImage.data[h.z];if(w({imageData:c.data,width:c.imageWidth,height:c.imageLength,canvasElement:o}),e){const e={width:z.crop.data[0].imageWidth,height:z.crop.data[0].imageLength},{position:t,width:r,height:a}=((e,t,r)=>({position:{x:e.x-(r.width-t.width)/2,y:e.y-(r.height-t.height)/2,z:e.z},width:r.width,height:r.height}))(h,e,z.crop.dimensions);z.crop.position=t;const n=z.sourceImage.data[t.z];w({imageData:n.data,width:n.imageWidth,height:n.imageLength,canvasElement:o}),X(o,t,{w:r,h:a})}else X(o,h,{w:z.crop.dimensions.width,h:z.crop.dimensions.height});I()},I=()=>{const e=`${z.crop.position.x}-${z.crop.position.x+z.crop.dimensions.width}`,t=`${z.crop.position.y}-${z.crop.position.y+z.crop.dimensions.height}`,r=`${z.crop.position.z}-${z.crop.position.z+z.crop.data.length}`,a=null!=z.crop.isRotated?`${Math.round(z.crop.angle)}`:"",n=`Crop Position: <br> x - ${e}, y - ${t}, z - ${r} ${null!=z.crop.isRotated?`<br> Rotated - ${a}Â°`:""}`;document.querySelector("#crop-info").innerHTML=n},$=L({callback:e=>{z.sourceImage=e,R()}}),A=L({callback:e=>{z.crop=e,R()}});document.querySelector("#source-image-input").addEventListener("change",$),document.querySelector("#crop-image-input").addEventListener("change",A);
