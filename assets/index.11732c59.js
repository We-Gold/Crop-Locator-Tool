import{g as e,d as t,a,b as r,p as n,I as i}from"./vendor.a78a7e74.js";const o=new e.exports.GPU({mode:"gpu"});function s(e,t,a){return e+a*t}function h(e,t,a,r,n,i,o,h){let c=0;for(let l=a;l<a+i;l+=h)for(let d=r;d<r+o;d+=h){const o=s(l,d,n),h=s(l-a,d-r,i),u=e[o],g=t[h];c+=Math.abs(u-g)}return c}o.addFunction(s),o.addFunction(h);const c=(e,t,a)=>{const r=Math.trunc(Math.abs(e.data[0].imageWidth-t.data[0].imageWidth)/a),n=Math.trunc(Math.abs(e.data[0].imageLength-t.data[0].imageLength)/a);return o.createKernel((function(e,t,a){const[r,n,i,o]=a;return h(e,t,this.thread.x*o,this.thread.y*o,r,n,i,o)})).setOutput([r,n])},l=(e,t,a)=>Math.min(Math.max(e,t),a),d=(e,t,a,r)=>{const{useEveryXPixel:n,useEveryXLayer:i}=r(),o=Math.abs(e.data[0].imageWidth-t.data[0].imageWidth),s=l(a.x-n,0,o),h=l(a.x+n,0,o)-s,c=Math.abs(e.data[0].imageLength-t.data[0].imageLength),d=l(a.y-n,0,c),u=l(a.y+n,0,c)-d,g=Math.abs(e.data.length-t.data.length),p=l(a.z-i,0,g);return{xScanStart:s,xAxisScans:h,yScanStart:d,yAxisScans:u,zScanStart:p,zAxisScans:l(a.z+i,0,g)-p}},u=(e,t,a,r)=>{const{xAxisScans:n,yAxisScans:i}=d(e,t,a,r);return o.createKernel((function(e,t,a){const[r,n,i,o,s,c]=a;return h(e,t,this.thread.x+s,this.thread.y+c,r,n,i,o)})).setOutput([n,i])},g=(e,t,a,r=0,n=0)=>{const i=e.data[0],o=t.data[0];return[i.imageWidth,o.imageWidth,o.imageLength,a,r,n]},p=({result:e,crop:t,convertPosition:a,threshold:r=.1})=>{const{useEveryXPixel:n,useEveryXLayer:i}=a(),o=(({threshold:e=.1,cropWidth:t,cropHeight:a,range:r=[0,255],useEveryXPixel:n})=>e*Math.abs(r[0]-r[1])*Math.trunc(t/n*a/n))({threshold:r,cropWidth:t.data[0].imageWidth,cropHeight:t.data[0].imageLength,useEveryXPixel:n,useEveryXLayer:i}),s=[];for(const[h,c]of Object.entries(e))for(const[e,t]of Object.entries(c))for(const[a,r]of Object.entries(t))if(r<o){const t=[h,e,a].map((e=>parseInt(e)));s.push({difference:r,index:t})}if(console.log({cropMatchThreshold:o,relativeMatches:s,result:e}),0==s.length)return null;return s.map((e=>{const t=e.index;return Object.assign(a({x:t[2],y:t[1],z:t[0]}),{difference:e.difference})}))},m=(e,t,{useEveryXPixel:a,useEveryXLayer:r,threshold:n})=>{const[i,o]=((e,t,{useEveryXLayer:a,useEveryXPixel:r})=>{const n=c(e,t,r),i=g(e,t,r),o=Math.abs(e.data.length-t.data.length);let s=[];for(let h=0;h<=o;h+=a){const a=e.data[h],r=t.data[0];s.push(n(a.data,r.data,i))}return[s,(e=null)=>null==e?{useEveryXPixel:r,useEveryXLayer:a}:{x:e.x*r,y:e.y*r,z:e.z*a}]})(e,t,{useEveryXPixel:a,useEveryXLayer:r});return[p({result:i,crop:t,convertPosition:o,threshold:n}),o,i]},y=(e,t,a,r,{useEveryXPixel:n,useEveryXLayer:i,threshold:o})=>{const[s,h]=((e,t,a,r,{useEveryXLayer:n,useEveryXPixel:i})=>{const o=a.map((a=>u(e,t,a,r))).map(((o,s)=>{const{zScanStart:h,zAxisScans:c,xScanStart:l,yScanStart:u}=d(e,t,a[s],r),p=g(e,t,i,l,u);let m=[];for(let a=h;a<=h+c;a+=n){const r=e.data[a],n=t.data[0];m.push(o(r.data,n.data,p))}return m})),{zScanStart:s,xScanStart:h,yScanStart:c}=d(e,t,a[0],r);return[o,(e=null)=>null==e?{useEveryXPixel:i,useEveryXLayer:n}:{x:e.x*i+h,y:e.y*i+c,z:e.z*n+s}]})(e,t,a,r,{useEveryXPixel:n,useEveryXLayer:i});return[s.map((e=>p({result:e,crop:t,convertPosition:h,threshold:o}))).reduce(((e,t)=>e.concat(t)),[]),h,s]},f=e=>e.reduce(((e,t)=>null==t?e:t.difference<e.difference?t:e),{difference:Number.MAX_VALUE}),v=(e,t,a=!1)=>{const r=((e,t)=>{const a=[];return null!=e&&null!=e||a.push("The source image provided is not defined"),null!=t&&null!=t||a.push("The cropped image provided is not defined"),(e.data.length<t.data.length||e.data[0].imageWidth<t.data[0].imageWidth||e.data[0].imageLength<t.data[0].imageLength)&&a.push("The source image provided is smaller than the cropped image"),a})(e,t);if(r.length>0)return{errors:r};console.time("pipeline");const{errors:n,pipeline:i,positions:o,bestPosition:s}=((e,t,a)=>{const r=[];for(const[n,i]of a.entries()){const{useEveryXPixel:a,useEveryXLayer:o,threshold:s}=i;if(0===n){const[n,i,h]=m(e,t,{useEveryXPixel:a,useEveryXLayer:o,threshold:s});r.push([n,i,h]);continue}if(null==r[n-1][0]||0===r[n-1][0].length)return{errors:["No match found"]};if(!r[n-1][0].some((e=>null!=e)))return{errors:["No match found"]};const h=[f(r[n-1][0])],[c,l,d]=y(e,t,h,r[n-1][1],{useEveryXPixel:a,useEveryXLayer:o,threshold:s});r.push([c,l,d])}return console.log(f(r[r.length-1][0])),{pipeline:r,positions:r[r.length-1],bestPosition:f(r[r.length-1][0])}})(e,t,a?[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:1,threshold:.05}]:[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.07},{useEveryXPixel:1,useEveryXLayer:1,threshold:.01}]);return console.timeEnd("pipeline"),{errors:n,pipeline:i,positions:o,bestPosition:s}},x=e=>{null!=e&&null!=e&&e.forEach((e=>(e=>{console.error(e),alert(e)})(e)))},E=async({imagePath:e=null,arrayBuffer:n=null,getImageDimensions:i=null})=>{if(null==e&&null==n)return{errors:["No image provided"]};if(null!=e){const t=(e=>{const t=[];return null!=e&&null!=e||t.push("No image path provided"),t})(e);if(0!=t.length)return{errors:t};n=await(async e=>{const t=await a.get(e,{responseType:"arraybuffer"});return r.Buffer.from(t.data,"utf-8")})(e)}let o;try{o=t(n)}catch(s){return{errors:["An image provided is not a tiff. Currently this tool only accepts tiffs."]}}return{data:o}},L=({errorHandler:e=x,callback:t})=>async a=>{const r=a.target.files[0],n=await r.arrayBuffer(),{data:i,errors:o}=await E({arrayBuffer:n,getImageDimensions:async()=>{const e=window.URL.createObjectURL(r);return await(e=>new Promise((t=>{const a=new Image;a.onload=()=>{t({imageHeight:a.height,imageWidth:a.width})},a.src=e})))(e)}});e(o),null!=i&&t({data:i,dimensions:{width:i[0].imageWidth,height:i[0].imageLength}})},X=(e,t,a,{strokeColor:r="rgb(64, 196, 82)",highlightColor:n="rgba(64, 196, 82, 0.3)"}={})=>{const i=e.getContext("2d");i.fillStyle=n,i.strokeStyle=r;const{x:o,y:s}=t,{w:h,h:c}=a;i.fillRect(o,s,h,c),i.strokeRect(o,s,h,c)},w=({imageData:e,width:t,height:a,canvasElement:r,imageRange:i=[0,255],colorScale:o="greys"})=>{const s=new n({canvas:r,data:e,width:t,height:a,domain:i,colorScale:o,useWebGL:!1});return s.render(),s};function P(e,t,a){return e+a*t}const S=(e,t,a,r)=>{let n=new i(t,a,e,{kind:"GREY"});return n=n.rotate(-r,{interpolation:"bilinear"}),n},b=(e,t)=>{const a=e.parent.width,r=Math.abs(a*Math.sin(M(t))),n=r/(Math.abs(a*Math.cos(M(t)))+r)*a,i=Math.trunc(n*Math.cos(M(t))),o=Math.trunc(r-n*Math.sin(M(t))),s=e.width-o-i,h=e.height-i-o;return console.log({x:i,y:o,width:s,height:h}),e=e.crop({x:i,y:o,width:s,height:h})},M=e=>e*Math.PI/180,W=(e,t)=>(e.imageWidth=e.width,e.imageLength=e.height,Array.from({length:t},(t=>e))),z={sourceImage:null,crop:null},R=()=>{if(null==z.sourceImage||null==z.crop)return;console.log(z);const{isRotated:e,angle:t}=(e=>{const{data:t,imageWidth:a,imageLength:r}=e.data[0],n=t[P(0,0,a)],i=t[P(a,0,a)],o=t[P(0,r-1,a)],s=t[P(a-1,r-1,a)];if(0!==n||0!==i||0!==o||0!==s)return{isRotated:!1};let h=a;for(let g=a-1;g>=0&&0===t[P(g-1,0,a)];g--)h=g;let c=0;for(let g=1;g<=r&&0===t[P(a-1,g,a)];g++)c=g;if(h===a&&0===c)return{isRotated:!1};const l=a-h,d=.5*l*c;let u=0;for(let g=h;g<a;g++)for(let e=0;e<c;e++)0===t[P(g,e,a)]&&u++;return u/d<.45?{isRotated:!1}:{isRotated:!0,angle:180*Math.atan(c/l)/Math.PI}})(z.crop);if(e){const a=z.crop.data[0],r=((e,t,a,r,n=1)=>{let i=S(e,t,a,r);return i=b(i,r),W(i,n)})(a.data,a.imageWidth,a.imageLength,t,z.crop.data.length);z.crop={data:r,dimensions:z.crop.dimensions,angle:t,isRotated:e}}const a=document.querySelector("#crop-canvas"),r=z.crop.data[0];w({imageData:r.data,width:r.imageWidth,height:r.imageLength,canvasElement:a});const{errors:n,pipeline:i,bestPosition:o}=v(z.sourceImage,z.crop,e);console.log(i),x(n);const s=document.querySelector("#source-image-canvas"),h=z.sourceImage.data[0];if(w({imageData:h.data,width:h.imageWidth,height:h.imageLength,canvasElement:s}),null!=n&&n.length>0)return;const c={x:o.x,y:o.y,z:o.z+1};z.crop.position=c;const l=z.sourceImage.data[c.z];if(w({imageData:l.data,width:l.imageWidth,height:l.imageLength,canvasElement:s}),e){const e={width:z.crop.data[0].imageWidth,height:z.crop.data[0].imageLength},{position:t,width:a,height:r}=((e,t,a)=>({position:{x:e.x-Math.round((a.width-t.width)/2),y:e.y-Math.round((a.height-t.height)/2),z:e.z},width:a.width,height:a.height}))(c,e,z.crop.dimensions);z.crop.position=t;const n=z.sourceImage.data[t.z];w({imageData:n.data,width:n.imageWidth,height:n.imageLength,canvasElement:s}),X(s,t,{w:a,h:r})}else X(s,c,{w:z.crop.dimensions.width,h:z.crop.dimensions.height});I()},I=()=>{const e=`${z.crop.position.x}-${z.crop.position.x+z.crop.dimensions.width}`,t=`${z.crop.position.y}-${z.crop.position.y+z.crop.dimensions.height}`,a=`${z.crop.position.z}-${z.crop.position.z+z.crop.data.length}`,r=null!=z.crop.isRotated?`${Math.round(z.crop.angle)}`:"",n=`Crop Position: <br> x - ${e}, y - ${t}, z - ${a} ${null!=z.crop.isRotated?`<br> Rotated - ${r}Â°`:""}`;document.querySelector("#crop-info").innerHTML=n},$=L({callback:e=>{z.sourceImage=e,R()}}),A=L({callback:e=>{z.crop=e,R()}});document.querySelector("#source-image-input").addEventListener("change",$),document.querySelector("#crop-image-input").addEventListener("change",A);
