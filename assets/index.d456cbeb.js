import{g as e,d as t,a,b as r,p as n}from"./vendor.7137c393.js";const s=new e.exports.GPU({mode:"gpu"});s.addFunction((function(e,t,a){return e+a*t})),s.addFunction((function(e,t,a,r,n,s,i,o){let c=0;for(let l=a;l<a+s;l+=o)for(let u=r;u<r+i;u+=o){const i=getImageDataIndex(l,u,n),o=getImageDataIndex(l-a,u-r,s),d=e[i],h=t[o];c+=Math.abs(d-h)}return c}));const i=(e,t,a)=>{const r=Math.trunc(Math.abs(e.data[0].imageWidth-t.data[0].imageWidth)/a),n=Math.trunc(Math.abs(e.data[0].imageLength-t.data[0].imageLength)/a);return s.createKernel((function(e,t,a){const[r,n,s,i]=a,o=this.thread.x*i,c=this.thread.y*i;return calculateAbsoluteDifferenceSum(e,t,o,c,r,n,s,i)})).setOutput([r,n])},o=(e,t,a)=>Math.min(Math.max(e,t),a),c=(e,t,a,r)=>{const{useEveryXPixel:n,useEveryXLayer:s}=r(),i=Math.abs(e.data[0].imageWidth-t.data[0].imageWidth),c=o(a.x-n,0,i),l=o(a.x+n,0,i)-c,u=Math.abs(e.data[0].imageLength-t.data[0].imageLength),d=o(a.y-n,0,u),h=o(a.y+n,0,u)-d,g=Math.abs(e.data.length-t.data.length),m=o(a.z-s,0,g);return{xScanStart:c,xAxisScans:l,yScanStart:d,yAxisScans:h,zScanStart:m,zAxisScans:o(a.z+s,0,g)-m}},l=(e,t,a,r)=>{const{xAxisScans:n,yAxisScans:i}=c(e,t,a,r);return s.createKernel((function(e,t,a){const[r,n,s,i,o,c]=a,l=this.thread.x+o,u=this.thread.y+c;return calculateAbsoluteDifferenceSum(e,t,l,u,r,n,s,i)})).setOutput([n,i])},u=(e,t,a,r=0,n=0)=>{const s=e.data[0],i=t.data[0];return[s.imageWidth,i.imageWidth,i.imageLength,a,r,n]},d=({result:e,crop:t,convertPosition:a,threshold:r=.1})=>{const{useEveryXPixel:n,useEveryXLayer:s}=a(),i=(({threshold:e=.1,cropWidth:t,cropHeight:a,range:r=[0,255],useEveryXPixel:n})=>e*Math.abs(r[0]-r[1])*Math.trunc(t/n*a/n))({threshold:r,cropWidth:t.data[0].imageWidth,cropHeight:t.data[0].imageLength,useEveryXPixel:n,useEveryXLayer:s}),o=[];for(const[c,l]of Object.entries(e))for(const[e,t]of Object.entries(l))for(const[a,r]of Object.entries(t))if(r<i){const t=[c,e,a].map((e=>parseInt(e)));o.push({difference:r,index:t})}if(0==o.length)return null;return o.map((e=>{const t=e.index;return Object.assign(a({x:t[2],y:t[1],z:t[0]}),{difference:e.difference})}))},h=(e,t,{useEveryXPixel:a,useEveryXLayer:r,threshold:n})=>{const[s,o]=((e,t,{useEveryXLayer:a,useEveryXPixel:r})=>{const n=i(e,t,r),s=u(e,t,r),o=Math.abs(e.data.length-t.data.length);let c=[];for(let i=0;i<=o;i+=a){const a=e.data[i],r=t.data[0];c.push(n(a.data,r.data,s))}return[c,(e=null)=>null==e?{useEveryXPixel:r,useEveryXLayer:a}:{x:e.x*r,y:e.y*r,z:e.z*a}]})(e,t,{useEveryXPixel:a,useEveryXLayer:r});return[d({result:s,crop:t,convertPosition:o,threshold:n}),o,s]},g=(e,t,a,r,{useEveryXPixel:n,useEveryXLayer:s,threshold:i})=>{const[o,h]=((e,t,a,r,{useEveryXLayer:n,useEveryXPixel:s})=>{const i=a.map((a=>l(e,t,a,r))).map(((i,o)=>{const{zScanStart:l,zAxisScans:d,xScanStart:h,yScanStart:g}=c(e,t,a[o],r),m=u(e,t,s,h,g);let y=[];for(let a=l;a<=l+d;a+=n){const r=e.data[a],n=t.data[0];y.push(i(r.data,n.data,m))}return y})),{zScanStart:o,xScanStart:d,yScanStart:h}=c(e,t,a[0],r);return[i,(e=null)=>null==e?{useEveryXPixel:s,useEveryXLayer:n}:{x:e.x*s+d,y:e.y*s+h,z:e.z*n+o}]})(e,t,a,r,{useEveryXPixel:n,useEveryXLayer:s});return[o.map((e=>d({result:e,crop:t,convertPosition:h,threshold:i}))).reduce(((e,t)=>e.concat(t)),[]),h,o]},m=e=>e.reduce(((e,t)=>null==t?e:t.difference<e.difference?t:e),{difference:Number.MAX_VALUE}),y=(e,t)=>{const a=((e,t)=>{const a=[];return null!=e&&null!=e||a.push("The source image provided is not defined"),null!=t&&null!=t||a.push("The cropped image provided is not defined"),(e.data.length<t.data.length||e.data[0].imageWidth<t.data[0].imageWidth||e.data[0].imageLength<t.data[0].imageLength)&&a.push("The source image provided is smaller than the cropped image"),a})(e,t);if(a.length>0)return{errors:a};console.time("pipeline");const{errors:r,pipeline:n,positions:s,bestPosition:i}=((e,t,a)=>{const r=[];for(const[n,s]of a.entries()){const{useEveryXPixel:a,useEveryXLayer:i,threshold:o}=s;if(0===n){const[n,s,c]=h(e,t,{useEveryXPixel:a,useEveryXLayer:i,threshold:o});r.push([n,s,c]);continue}if(null==r[n-1][0])return{errors:["No match found"]};const c=[m(r[n-1][0])],[l,u,d]=g(e,t,c,r[n-1][1],{useEveryXPixel:a,useEveryXLayer:i,threshold:o});r.push([l,u,d])}return{pipeline:r,positions:r[r.length-1],bestPosition:m(r[r.length-1][0])}})(e,t,[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.06},{useEveryXPixel:1,useEveryXLayer:1,threshold:.01}]);return console.timeEnd("pipeline"),{errors:r,pipeline:n,positions:s,bestPosition:i}},p=e=>{null!=e&&null!=e&&e.forEach((e=>(e=>{console.error(e)})(e)))},f=async({imagePath:e=null,arrayBuffer:n=null,getImageDimensions:s=null})=>{if(null==e&&null==n)return{errors:["No image provided"]};if(null!=e){const t=(e=>{const t=[];return null!=e&&null!=e||t.push("No image path provided"),t})(e);if(0!=t.length)return{errors:t};n=await(async e=>{const t=await a.get(e,{responseType:"arraybuffer"});return r.Buffer.from(t.data,"utf-8")})(e)}let i;try{i=t(n)}catch(o){return{errors:["An image provided is not a tiff. Currently this tool only accepts tiffs."]}}return{data:i}},v=({errorHandler:e=p,callback:t})=>async a=>{const r=a.target.files[0],n=await r.arrayBuffer(),{data:s,errors:i}=await f({arrayBuffer:n,getImageDimensions:async()=>{const e=window.URL.createObjectURL(r);return await(e=>new Promise((t=>{const a=new Image;a.onload=()=>{t({imageHeight:a.height,imageWidth:a.width})},a.src=e})))(e)}});e(i),null!=s&&t({data:s})},x=(e,t,a)=>{e.style.width=`${t}px`,e.style.height=`${a}px`},E=({imageData:e,width:t,height:a,canvasElement:r,canvasWidth:s=null,canvasHeight:i=null,imageRange:o=[0,255],colorScale:c="greys"})=>{const l=new n({canvas:r,data:e,width:t,height:a,domain:o,colorScale:c,useWebGL:!1});return(({canvasElement:e,canvasWidth:t=null,canvasHeight:a=null,width:r,height:n})=>{if(null==t&&null==a)return;const s=r/n;if(null!=t)return void x(e,t,t/s);x(e,t*s,a)})({canvasElement:r,canvasWidth:s,canvasHeight:i,width:t,height:a}),l.render(),l},L={sourceImage:null,crop:null},X=()=>{if(console.log(L),null==L.sourceImage||null==L.crop)return;(()=>{const e=L.crop.data[0],t=document.querySelector("#crop-image-canvas");E({imageData:e.data,width:e.imageWidth,height:e.imageLength,canvasElement:t})})();const{errors:e,pipeline:t,positions:a,bestPosition:r}=y(L.sourceImage,L.crop);p(e);const n=document.querySelector("#source-image-canvas"),s=L.sourceImage.data[0];if(E({imageData:s.data,width:s.imageWidth,height:s.imageLength,canvasElement:n}),null!=e&&e.length>0)return;const i={x:r.x,y:r.y,z:r.z+1},o=L.sourceImage.data[i.z];E({imageData:o.data,width:o.imageWidth,height:o.imageLength,canvasElement:n}),((e,t,a,{strokeColor:r="rgb(64, 196, 82)",highlightColor:n="rgba(64, 196, 82, 0.3)"}={})=>{const s=e.getContext("2d");s.fillStyle=n,s.strokeStyle=r;const{x:i,y:o}=t,{w:c,h:l}=a;s.fillRect(i,o,c,l),s.strokeRect(i,o,c,l)})(n,i,{w:L.crop.data[0].imageWidth,h:L.crop.data[0].imageLength})},S=v({callback:e=>{L.sourceImage=e,X()}}),b=v({callback:e=>{L.crop=e,X()}});document.querySelector("#source-image-input").addEventListener("change",S),document.querySelector("#crop-image-input").addEventListener("change",b),document.querySelector("#default-images-button").addEventListener("click",(async()=>{const{data:e,errors:t}=await f({imagePath:"/samples/5dpf_1_8bit.tif"}),{data:a,errors:r}=await f({imagePath:"/samples/Training Crops/5dpf_1_8bit_x_200-500_y_250-550_z_350-650.tif"});p(t),p(r),L.sourceImage={data:e},L.crop={data:a},X()}));
