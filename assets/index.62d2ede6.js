import{g as e,d as t,a as r,b as a,p as n,I as i}from"./vendor.6053f2ee.js";const o=new e.exports.GPU({mode:"gpu"});function s(e,t,r){return e+r*t}function h(e,t,r,a,n,i,o,h){let c=0;for(let d=r;d<r+i;d+=h)for(let l=a;l<a+o;l+=h){const o=s(d,l,n),h=s(d-r,l-a,i),u=e[o],g=t[h];c+=Math.abs(u-g)}return c}o.addFunction(s),o.addFunction(h);const c=(e,t,r)=>{const a=Math.trunc(Math.abs(e.data[0].imageWidth-t.data[0].imageWidth)/r),n=Math.trunc(Math.abs(e.data[0].imageLength-t.data[0].imageLength)/r);return o.createKernel((function(e,t,r){const[a,n,i,o]=r;return h(e,t,this.thread.x*o,this.thread.y*o,a,n,i,o)})).setOutput([a,n])},d=(e,t,r)=>Math.min(Math.max(e,t),r),l=(e,t,r,a)=>{const{useEveryXPixel:n,useEveryXLayer:i}=a(),o=Math.abs(e.data[0].imageWidth-t.data[0].imageWidth),s=d(r.x-n,0,o),h=d(r.x+n,0,o)-s,c=Math.abs(e.data[0].imageLength-t.data[0].imageLength),l=d(r.y-n,0,c),u=d(r.y+n,0,c)-l,g=Math.abs(e.data.length-t.data.length),p=d(r.z-i,0,g);return{xScanStart:s,xAxisScans:h,yScanStart:l,yAxisScans:u,zScanStart:p,zAxisScans:d(r.z+i,0,g)-p}},u=(e,t,r,a)=>{const{xAxisScans:n,yAxisScans:i}=l(e,t,r,a);return o.createKernel((function(e,t,r){const[a,n,i,o,s,c]=r;return h(e,t,this.thread.x+s,this.thread.y+c,a,n,i,o)})).setOutput([n,i])},g=(e,t,r,a=0,n=0)=>{const i=e.data[0],o=t.data[0];return[i.imageWidth,o.imageWidth,o.imageLength,r,a,n]},p=({result:e,crop:t,convertPosition:r,threshold:a=.1})=>{const{useEveryXPixel:n,useEveryXLayer:i}=r(),o=(({threshold:e=.1,cropWidth:t,cropHeight:r,range:a=[0,255],useEveryXPixel:n})=>e*Math.abs(a[0]-a[1])*Math.trunc(t/n*r/n))({threshold:a,cropWidth:t.data[0].imageWidth,cropHeight:t.data[0].imageLength,useEveryXPixel:n,useEveryXLayer:i}),s=[];for(const[h,c]of Object.entries(e))for(const[e,t]of Object.entries(c))for(const[r,a]of Object.entries(t))if(a<o){const t=[h,e,r].map((e=>parseInt(e)));s.push({difference:a,index:t})}if(0==s.length)return null;return s.map((e=>{const t=e.index;return Object.assign(r({x:t[2],y:t[1],z:t[0]}),{difference:e.difference})}))},y=(e,t,{useEveryXPixel:r,useEveryXLayer:a,threshold:n})=>{const[i,o]=((e,t,{useEveryXLayer:r,useEveryXPixel:a})=>{const n=c(e,t,a),i=g(e,t,a),o=Math.abs(e.data.length-t.data.length);let s=[];for(let h=0;h<=o;h+=r){const r=e.data[h],a=t.data[0];s.push(n(r.data,a.data,i))}return[s,(e=null)=>null==e?{useEveryXPixel:a,useEveryXLayer:r}:{x:e.x*a,y:e.y*a,z:e.z*r}]})(e,t,{useEveryXPixel:r,useEveryXLayer:a});return[p({result:i,crop:t,convertPosition:o,threshold:n}),o,i]},m=(e,t,r,a,{useEveryXPixel:n,useEveryXLayer:i,threshold:o})=>{const[s,h]=((e,t,r,a,{useEveryXLayer:n,useEveryXPixel:i})=>{const o=r.map((r=>u(e,t,r,a))).map(((o,s)=>{const{zScanStart:h,zAxisScans:c,xScanStart:d,yScanStart:u}=l(e,t,r[s],a),p=g(e,t,i,d,u);let y=[];for(let r=h;r<=h+c;r+=n){const a=e.data[r],n=t.data[0];y.push(o(a.data,n.data,p))}return y})),{zScanStart:s,xScanStart:h,yScanStart:c}=l(e,t,r[0],a);return[o,(e=null)=>null==e?{useEveryXPixel:i,useEveryXLayer:n}:{x:e.x*i+h,y:e.y*i+c,z:e.z*n+s}]})(e,t,r,a,{useEveryXPixel:n,useEveryXLayer:i});return[s.map((e=>p({result:e,crop:t,convertPosition:h,threshold:o}))).reduce(((e,t)=>e.concat(t)),[]),h,s]},f=e=>e.reduce(((e,t)=>null==t?e:t.difference<e.difference?t:e),{difference:Number.MAX_VALUE}),v=(e,t,r=!1)=>{const a=((e,t)=>{const r=[];return null!=e&&null!=e||r.push("The source image provided is not defined"),null!=t&&null!=t||r.push("The cropped image provided is not defined"),(e.data.length<t.data.length||e.data[0].imageWidth<t.data[0].imageWidth||e.data[0].imageLength<t.data[0].imageLength)&&r.push("The source image provided is smaller than the cropped image"),r})(e,t);if(a.length>0)return{errors:a};console.time("pipeline");const{errors:n,pipeline:i,positions:o,bestPosition:s}=((e,t,r)=>{const a=[];for(const[n,i]of r.entries()){const{useEveryXPixel:r,useEveryXLayer:o,threshold:s}=i;if(0===n){const[n,i,h]=y(e,t,{useEveryXPixel:r,useEveryXLayer:o,threshold:s});a.push([n,i,h]);continue}if(null==a[n-1][0]||0===a[n-1][0].length)return{errors:["No match found"]};if(!a[n-1][0].some((e=>null!=e)))return{errors:["No match found"]};const h=[f(a[n-1][0])],[c,d,l]=m(e,t,h,a[n-1][1],{useEveryXPixel:r,useEveryXLayer:o,threshold:s});a.push([c,d,l])}return{pipeline:a,positions:a[a.length-1],bestPosition:f(a[a.length-1][0])}})(e,t,r?[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.06},{useEveryXPixel:1,useEveryXLayer:1,threshold:.03}]:[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.07},{useEveryXPixel:1,useEveryXLayer:1,threshold:.01}]);return console.timeEnd("pipeline"),{errors:n,pipeline:i,positions:o,bestPosition:s}},x=e=>{null!=e&&null!=e&&e.forEach((e=>(e=>{console.error(e),alert(e)})(e)))},E=async({imagePath:e=null,arrayBuffer:n=null,getImageDimensions:i=null})=>{if(null==e&&null==n)return{errors:["No image provided"]};if(null!=e){const t=(e=>{const t=[];return null!=e&&null!=e||t.push("No image path provided"),t})(e);if(0!=t.length)return{errors:t};n=await(async e=>{const t=await r.get(e,{responseType:"arraybuffer"});return a.Buffer.from(t.data,"utf-8")})(e)}let o;try{o=t(n)}catch(s){return{errors:["An image provided is not a tiff. Currently this tool only accepts tiffs."]}}return{data:o}},L=({errorHandler:e=x,callback:t})=>async r=>{const a=r.target.files[0],n=await a.arrayBuffer(),{data:i,errors:o}=await E({arrayBuffer:n,getImageDimensions:async()=>{const e=window.URL.createObjectURL(a);return await(e=>new Promise((t=>{const r=new Image;r.onload=()=>{t({imageHeight:r.height,imageWidth:r.width})},r.src=e})))(e)}});e(o),null!=i&&t({data:i,dimensions:{width:i[0].imageWidth,height:i[0].imageLength}})},X=({imageData:e,width:t,height:r,canvasElement:a,imageRange:i=[0,255],colorScale:o="greys"})=>{const s=new n({canvas:a,data:e,width:t,height:r,domain:i,colorScale:o,useWebGL:!1});return s.render(),s};function w(e,t,r){return e+r*t}const P=(e,t,r,a)=>{let n=new i(t,r,e,{kind:"GREY"});return n=n.rotate(-a,{interpolation:"bilinear"}),n},S=(e,t)=>{const r=e.parent.width,a=Math.abs(r*Math.sin(b(t))),n=a/(Math.abs(r*Math.cos(b(t)))+a)*r,i=n*Math.cos(b(t)),o=a-n*Math.sin(b(t)),s=e.width-o-i,h=e.height-i-o;return e=e.crop({x:i,y:o,width:s,height:h})},b=e=>e*Math.PI/180,M=(e,t)=>(e.imageWidth=e.width,e.imageLength=e.height,Array.from({length:t},(t=>e))),W={sourceImage:null,crop:null},z=()=>{if(null==W.sourceImage||null==W.crop)return;console.log(W);const{isRotated:e,angle:t}=(e=>{const{data:t,imageWidth:r,imageLength:a}=e.data[0],n=t[w(0,0,r)],i=t[w(r,0,r)],o=t[w(0,a-1,r)],s=t[w(r-1,a-1,r)];if(0!==n||0!==i||0!==o||0!==s)return{isRotated:!1};let h=r;for(let g=r-1;g>=0&&0===t[w(g-1,0,r)];g--)h=g;let c=0;for(let g=1;g<=a&&0===t[w(r-1,g,r)];g++)c=g;if(h===r&&0===c)return{isRotated:!1};const d=r-h,l=.5*d*c;let u=0;for(let g=h;g<r;g++)for(let e=0;e<c;e++)0===t[w(g,e,r)]&&u++;return u/l<.45?{isRotated:!1}:{isRotated:!0,angle:180*Math.atan(c/d)/Math.PI}})(W.crop);if(e){const r=W.crop.data[0],a=((e,t,r,a,n=1)=>{let i=P(e,t,r,a);return i=S(i,a),M(i,n)})(r.data,r.imageWidth,r.imageLength,t,W.crop.data.length);W.crop={data:a,dimensions:W.crop.dimensions,angle:t,isRotated:e}}else{const e=((e,t,r,a,{width:n=100,height:o=100}={})=>{let s=new i(t,r,e,{kind:"GREY"});const h=Math.min(n,t),c=Math.min(o,r),d=(t-h)/2,l=(r-c)/2;return s=s.crop({x:d,y:l,width:h,height:c}),M(s,a)})(W.crop.data[0].data,W.crop.dimensions.width,W.crop.dimensions.height,W.crop.data.length,{width:100,height:100});W.crop={data:e,dimensions:W.crop.dimensions}}const r=document.querySelector("#crop-canvas"),a=W.crop.data[0];X({imageData:a.data,width:a.imageWidth,height:a.imageLength,canvasElement:r});const{errors:n,bestPosition:o}=v(W.sourceImage,W.crop,e);x(n);const s=document.querySelector("#source-image-canvas"),h=W.sourceImage.data[0];if(X({imageData:h.data,width:h.imageWidth,height:h.imageLength,canvasElement:s}),null!=n&&n.length>0)return;const c={x:o.x,y:o.y,z:o.z+1},d={width:W.crop.data[0].imageWidth,height:W.crop.data[0].imageLength},{position:l,width:u,height:g}=((e,t,r)=>({position:{x:e.x-(r.width-t.width)/2,y:e.y-(r.height-t.height)/2,z:e.z},width:r.width,height:r.height}))(c,d,W.crop.dimensions);W.crop.position=l;const p=W.sourceImage.data[c.z];X({imageData:p.data,width:p.imageWidth,height:p.imageLength,canvasElement:s}),((e,t,r,{strokeColor:a="rgb(64, 196, 82)",highlightColor:n="rgba(64, 196, 82, 0.3)"}={})=>{const i=e.getContext("2d");i.fillStyle=n,i.strokeStyle=a;const{x:o,y:s}=t,{w:h,h:c}=r;i.fillRect(o,s,h,c),i.strokeRect(o,s,h,c)})(s,l,{w:u,h:g}),R()},R=()=>{const e=`${W.crop.position.x}-${W.crop.position.x+W.crop.dimensions.width}`,t=`${W.crop.position.y}-${W.crop.position.y+W.crop.dimensions.height}`,r=`${W.crop.position.z}-${W.crop.position.z+W.crop.data.length}`,a=null!=W.crop.isRotated?`${Math.round(W.crop.angle)}`:"",n=`Crop Position: <br> x - ${e}, y - ${t}, z - ${r} ${null!=W.crop.isRotated?`<br> Rotated - ${a}Â°`:""}`;document.querySelector("#crop-info").innerHTML=n},I=L({callback:e=>{W.sourceImage=e,z()}}),$=L({callback:e=>{W.crop=e,z()}});document.querySelector("#source-image-input").addEventListener("change",I),document.querySelector("#crop-image-input").addEventListener("change",$);
