import{g as e,d as t,a,b as r,p as n,I as i}from"./vendor.6053f2ee.js";const s=new e.exports.GPU({mode:"gpu"});s.addFunction((function(e,t,a){return e+a*t})),s.addFunction((function(e,t,a,r,n,i,s,o){let h=0;for(let c=a;c<a+i;c+=o)for(let l=r;l<r+s;l+=o){const s=getImageDataIndex(c,l,n),o=getImageDataIndex(c-a,l-r,i),d=e[s],u=t[o];h+=Math.abs(d-u)}return h}));const o=(e,t,a)=>{const r=Math.trunc(Math.abs(e.data[0].imageWidth-t.data[0].imageWidth)/a),n=Math.trunc(Math.abs(e.data[0].imageLength-t.data[0].imageLength)/a);return s.createKernel((function(e,t,a){const[r,n,i,s]=a,o=this.thread.x*s,h=this.thread.y*s;return calculateAbsoluteDifferenceSum(e,t,o,h,r,n,i,s)})).setOutput([r,n])},h=(e,t,a)=>Math.min(Math.max(e,t),a),c=(e,t,a,r)=>{const{useEveryXPixel:n,useEveryXLayer:i}=r(),s=Math.abs(e.data[0].imageWidth-t.data[0].imageWidth),o=h(a.x-n,0,s),c=h(a.x+n,0,s)-o,l=Math.abs(e.data[0].imageLength-t.data[0].imageLength),d=h(a.y-n,0,l),u=h(a.y+n,0,l)-d,g=Math.abs(e.data.length-t.data.length),m=h(a.z-i,0,g);return{xScanStart:o,xAxisScans:c,yScanStart:d,yAxisScans:u,zScanStart:m,zAxisScans:h(a.z+i,0,g)-m}},l=(e,t,a,r)=>{const{xAxisScans:n,yAxisScans:i}=c(e,t,a,r);return s.createKernel((function(e,t,a){const[r,n,i,s,o,h]=a,c=this.thread.x+o,l=this.thread.y+h;return calculateAbsoluteDifferenceSum(e,t,c,l,r,n,i,s)})).setOutput([n,i])},d=(e,t,a,r=0,n=0)=>{const i=e.data[0],s=t.data[0];return[i.imageWidth,s.imageWidth,s.imageLength,a,r,n]},u=({result:e,crop:t,convertPosition:a,threshold:r=.1})=>{const{useEveryXPixel:n,useEveryXLayer:i}=a(),s=(({threshold:e=.1,cropWidth:t,cropHeight:a,range:r=[0,255],useEveryXPixel:n})=>e*Math.abs(r[0]-r[1])*Math.trunc(t/n*a/n))({threshold:r,cropWidth:t.data[0].imageWidth,cropHeight:t.data[0].imageLength,useEveryXPixel:n,useEveryXLayer:i}),o=[];for(const[h,c]of Object.entries(e))for(const[e,t]of Object.entries(c))for(const[a,r]of Object.entries(t))if(r<s){const t=[h,e,a].map((e=>parseInt(e)));o.push({difference:r,index:t})}if(0==o.length)return null;return o.map((e=>{const t=e.index;return Object.assign(a({x:t[2],y:t[1],z:t[0]}),{difference:e.difference})}))},g=(e,t,{useEveryXPixel:a,useEveryXLayer:r,threshold:n})=>{const[i,s]=((e,t,{useEveryXLayer:a,useEveryXPixel:r})=>{const n=o(e,t,r),i=d(e,t,r),s=Math.abs(e.data.length-t.data.length);let h=[];for(let o=0;o<=s;o+=a){const a=e.data[o],r=t.data[0];h.push(n(a.data,r.data,i))}return[h,(e=null)=>null==e?{useEveryXPixel:r,useEveryXLayer:a}:{x:e.x*r,y:e.y*r,z:e.z*a}]})(e,t,{useEveryXPixel:a,useEveryXLayer:r});return[u({result:i,crop:t,convertPosition:s,threshold:n}),s,i]},m=(e,t,a,r,{useEveryXPixel:n,useEveryXLayer:i,threshold:s})=>{const[o,h]=((e,t,a,r,{useEveryXLayer:n,useEveryXPixel:i})=>{const s=a.map((a=>l(e,t,a,r))).map(((s,o)=>{const{zScanStart:h,zAxisScans:l,xScanStart:u,yScanStart:g}=c(e,t,a[o],r),m=d(e,t,i,u,g);let y=[];for(let a=h;a<=h+l;a+=n){const r=e.data[a],n=t.data[0];y.push(s(r.data,n.data,m))}return y})),{zScanStart:o,xScanStart:h,yScanStart:u}=c(e,t,a[0],r);return[s,(e=null)=>null==e?{useEveryXPixel:i,useEveryXLayer:n}:{x:e.x*i+h,y:e.y*i+u,z:e.z*n+o}]})(e,t,a,r,{useEveryXPixel:n,useEveryXLayer:i});return[o.map((e=>u({result:e,crop:t,convertPosition:h,threshold:s}))).reduce(((e,t)=>e.concat(t)),[]),h,o]},y=e=>e.reduce(((e,t)=>null==t?e:t.difference<e.difference?t:e),{difference:Number.MAX_VALUE}),p=(e,t,a=!1)=>{const r=((e,t)=>{const a=[];return null!=e&&null!=e||a.push("The source image provided is not defined"),null!=t&&null!=t||a.push("The cropped image provided is not defined"),(e.data.length<t.data.length||e.data[0].imageWidth<t.data[0].imageWidth||e.data[0].imageLength<t.data[0].imageLength)&&a.push("The source image provided is smaller than the cropped image"),a})(e,t);if(r.length>0)return{errors:r};console.time("pipeline");const{errors:n,pipeline:i,positions:s,bestPosition:o}=((e,t,a)=>{const r=[];for(const[n,i]of a.entries()){const{useEveryXPixel:a,useEveryXLayer:s,threshold:o}=i;if(0===n){const[n,i,h]=g(e,t,{useEveryXPixel:a,useEveryXLayer:s,threshold:o});r.push([n,i,h]);continue}if(null==r[n-1][0])return{errors:["No match found"]};const h=[y(r[n-1][0])],[c,l,d]=m(e,t,h,r[n-1][1],{useEveryXPixel:a,useEveryXLayer:s,threshold:o});r.push([c,l,d])}return{pipeline:r,positions:r[r.length-1],bestPosition:y(r[r.length-1][0])}})(e,t,[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:5,threshold:.06},{useEveryXPixel:1,useEveryXLayer:1,threshold:a?.05:.01}]);return console.timeEnd("pipeline"),{errors:n,pipeline:i,positions:s,bestPosition:o}},f=e=>{null!=e&&null!=e&&e.forEach((e=>(e=>{console.error(e)})(e)))},v=async({imagePath:e=null,arrayBuffer:n=null,getImageDimensions:i=null})=>{if(null==e&&null==n)return{errors:["No image provided"]};if(null!=e){const t=(e=>{const t=[];return null!=e&&null!=e||t.push("No image path provided"),t})(e);if(0!=t.length)return{errors:t};n=await(async e=>{const t=await a.get(e,{responseType:"arraybuffer"});return r.Buffer.from(t.data,"utf-8")})(e)}let s;try{s=t(n)}catch(o){return{errors:["An image provided is not a tiff. Currently this tool only accepts tiffs."]}}return{data:s}},x=({errorHandler:e=f,callback:t})=>async a=>{const r=a.target.files[0],n=await r.arrayBuffer(),{data:i,errors:s}=await v({arrayBuffer:n,getImageDimensions:async()=>{const e=window.URL.createObjectURL(r);return await(e=>new Promise((t=>{const a=new Image;a.onload=()=>{t({imageHeight:a.height,imageWidth:a.width})},a.src=e})))(e)}});e(s),null!=i&&t({data:i})},E=(e,t,a)=>{e.style.width=`${t}px`,e.style.height=`${a}px`},L=(e,t,a,{strokeColor:r="rgb(64, 196, 82)",highlightColor:n="rgba(64, 196, 82, 0.3)"}={})=>{const i=e.getContext("2d");i.fillStyle=n,i.strokeStyle=r;const{x:s,y:o}=t,{w:h,h:c}=a;i.fillRect(s,o,h,c),i.strokeRect(s,o,h,c)},w=({imageData:e,width:t,height:a,canvasElement:r,canvasWidth:i=null,canvasHeight:s=null,imageRange:o=[0,255],colorScale:h="greys"})=>{const c=new n({canvas:r,data:e,width:t,height:a,domain:o,colorScale:h,useWebGL:!1});return(({canvasElement:e,canvasWidth:t=null,canvasHeight:a=null,width:r,height:n})=>{if(null==t&&null==a)return;const i=r/n;if(null!=t)return void E(e,t,t/i);E(e,t*i,a)})({canvasElement:r,canvasWidth:i,canvasHeight:s,width:t,height:a}),c.render(),c};function X(e,t,a){return e+a*t}const S=(e,t,a,r)=>{let n=new i(t,a,e,{kind:"GREY"});return n=n.rotate(-r,{interpolation:"bilinear"}),n},b=(e,t)=>{const a=e.parent.width,r=Math.abs(a*Math.sin(P(t))),n=r/(Math.abs(a*Math.cos(P(t)))+r)*a,i=n*Math.cos(P(t)),s=r-n*Math.sin(P(t)),o=e.width-s-i,h=e.height-i-s;return e=e.crop({x:i,y:s,width:o,height:h})},P=e=>e*Math.PI/180,W=(e,t)=>(e.imageWidth=e.width,e.imageLength=e.height,Array.from({length:t},(t=>e))),M={sourceImage:null,crop:null},I=()=>{if(console.log(M),null==M.sourceImage||null==M.crop)return;const{isRotated:e,angle:t}=(e=>{const{data:t,imageWidth:a,imageLength:r}=e.data[0],n=t[X(0,0,a)],i=t[X(a,0,a)],s=t[X(0,r-1,a)],o=t[X(a-1,r-1,a)];if(0!==n||0!==i||0!==s||0!==o)return{isRotated:!1};let h=a;for(let g=a-1;g>=0&&0===t[X(g-1,0,a)];g--)h=g;let c=0;for(let g=1;g<=r&&0===t[X(a-1,g,a)];g++)c=g;if(h===a&&0===c)return{isRotated:!1};const l=a-h,d=.5*l*c;let u=0;for(let g=h;g<a;g++)for(let e=0;e<c;e++)0===t[X(g,e,a)]&&u++;return u/d<.45?{isRotated:!1}:{isRotated:!0,angle:180*Math.atan(c/l)/Math.PI}})(M.crop);if(e){const e=M.crop.data[0],a=((e,t,a,r,n=1)=>{let i=S(e,t,a,r);return i=b(i,r),W(i,n)})(e.data,e.imageWidth,e.imageLength,t,M.crop.data.length);M.crop={data:a,dimensions:{width:e.imageWidth,height:e.imageLength}}}(e=>{const t=e.data[0],a=document.querySelector("#crop-image-canvas");w({imageData:t.data,width:t.imageWidth,height:t.imageLength,canvasElement:a})})(M.crop);const{errors:a,pipeline:r,positions:n,bestPosition:i}=p(M.sourceImage,M.crop,e);f(a);const s=document.querySelector("#source-image-canvas"),o=M.sourceImage.data[0];if(w({imageData:o.data,width:o.imageWidth,height:o.imageLength,canvasElement:s}),null!=a&&a.length>0)return;const h={x:i.x,y:i.y,z:i.z+1},c=M.sourceImage.data[h.z];if(w({imageData:c.data,width:c.imageWidth,height:c.imageLength,canvasElement:s}),e){const e={width:M.crop.data[0].imageWidth,height:M.crop.data[0].imageLength},{position:t,width:a,height:r}=((e,t,a)=>({position:{x:e.x-(a.width-t.width)/2,y:e.y-(a.height-t.height)/2},width:a.width,height:a.height}))(h,e,M.crop.dimensions);L(s,t,{w:a,h:r})}else L(s,h,{w:M.crop.data[0].imageWidth,h:M.crop.data[0].imageLength})},z=x({callback:e=>{M.sourceImage=e,I()}}),_=x({callback:e=>{M.crop=e,I()}});document.querySelector("#source-image-input").addEventListener("change",z),document.querySelector("#crop-image-input").addEventListener("change",_),document.querySelector("#default-images-button").addEventListener("click",(async()=>{const{data:e,errors:t}=await v({imagePath:"/samples/5dpf_1_8bit.tif"}),{data:a,errors:r}=await v({imagePath:"/samples/Training Crops/5dpf_1_8bit_x_200-500_y_250-550_z_350-650_Rotated_30deg.tif"});f(t),f(r),M.sourceImage={data:e},M.crop={data:a},I()}));
