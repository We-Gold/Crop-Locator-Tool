import{g as e,d as t,a as r,b as a,p as n,I as i}from"./vendor.a78a7e74.js";const s=new e.exports.GPU({mode:"gpu"});function o(e,t,r){return e+r*t}s.addFunction(o);const h=(e,t,r)=>{const a=Math.trunc(Math.abs(e.data[0].imageWidth-t.data[0].imageWidth)/r),n=Math.trunc(Math.abs(e.data[0].imageLength-t.data[0].imageLength)/r);return s.createKernel((function(e,t){const r=this.thread.x*this.constants.useEveryXPixel,a=this.thread.y*this.constants.useEveryXPixel;let n=0;for(let i=0;i<this.constants.cropLayerWidth;i+=this.constants.useEveryXPixel){const s=r+i;for(let i=0;i<this.constants.cropLayerLength;i+=this.constants.useEveryXPixel){const h=a+i,c=o(s,h,this.constants.sourceImageLayerWidth),d=o(s-r,h-a,this.constants.cropLayerWidth),l=e[c],u=t[d];n+=Math.abs(l-u)}}return n})).setOutput([a,n]).setConstants({sourceImageLayerWidth:e.data[0].imageWidth,cropLayerWidth:t.data[0].imageWidth,cropLayerLength:t.data[0].imageLength,useEveryXPixel:r})},c=(e,t,r,a,n,i,h)=>{const{xAxisScans:c,yAxisScans:d}=l(e,t,r,a);return s.createKernel((function(e,t){const r=this.thread.x*this.constants.useEveryXPixel+this.constants.originX,a=this.thread.y*this.constants.useEveryXPixel+this.constants.originY;let n=0;for(let i=0;i<this.constants.cropLayerWidth;i+=this.constants.useEveryXPixel){const s=r+i;for(let i=0;i<this.constants.cropLayerLength;i+=this.constants.useEveryXPixel){const h=a+i,c=o(s,h,this.constants.sourceImageLayerWidth),d=o(s-r,h-a,this.constants.cropLayerWidth),l=e[c],u=t[d];n+=Math.abs(l-u)}}return n})).setOutput([c,d]).setConstants({sourceImageLayerWidth:e.data[0].imageWidth,cropLayerWidth:t.data[0].imageWidth,cropLayerLength:t.data[0].imageLength,useEveryXPixel:n,originX:i,originY:h})},d=(e,t,r)=>Math.min(Math.max(e,t),r),l=(e,t,r,a)=>{const{useEveryXPixel:n,useEveryXLayer:i}=a(),s=Math.abs(e.data[0].imageWidth-t.data[0].imageWidth),o=d(r.x-n,0,s),h=d(r.x+n,0,s)-o,c=Math.abs(e.data[0].imageLength-t.data[0].imageLength),l=d(r.y-n,0,c),u=d(r.y+n,0,c)-l,g=Math.abs(e.data.length-t.data.length),y=d(r.z-i,0,g);return{xScanStart:o,xAxisScans:h,yScanStart:l,yAxisScans:u,zScanStart:y,zAxisScans:d(r.z+i,0,g)-y}},u=({result:e,crop:t,convertPosition:r,threshold:a=.1})=>{const{useEveryXPixel:n,useEveryXLayer:i}=r(),s=(({threshold:e=.1,cropWidth:t,cropHeight:r,range:a=[0,255],useEveryXPixel:n})=>e*Math.abs(a[0]-a[1])*Math.trunc(t/n*r/n))({threshold:a,cropWidth:t.data[0].imageWidth,cropHeight:t.data[0].imageLength,useEveryXPixel:n,useEveryXLayer:i}),o=[];for(const[h,c]of Object.entries(e))for(const[e,t]of Object.entries(c))for(const[r,a]of Object.entries(t))if(a<s){const t=[h,e,r].map((e=>parseInt(e)));o.push({difference:a,index:t})}if(0==o.length)return null;return o.map((e=>{const t=e.index;return Object.assign(r({x:t[2],y:t[1],z:t[0]}),{difference:e.difference})}))},g=(e,t,{useEveryXPixel:r,useEveryXLayer:a,threshold:n})=>{const[i,s]=((e,t,{useEveryXLayer:r,useEveryXPixel:a})=>{const n=h(e,t,a),i=Math.abs(e.data.length-t.data.length);let s=[];for(let o=0;o<=i;o+=r){const r=e.data[o],a=t.data[0];s.push(n(r.data,a.data))}return[s,(e=null)=>null==e?{useEveryXPixel:a,useEveryXLayer:r}:{x:e.x*a,y:e.y*a,z:e.z*r}]})(e,t,{useEveryXPixel:r,useEveryXLayer:a});return[u({result:i,crop:t,convertPosition:s,threshold:n}),s,i]},y=(e,t,r,a,{useEveryXPixel:n,useEveryXLayer:i,threshold:s})=>{const[o,h]=((e,t,r,a,{useEveryXLayer:n,useEveryXPixel:i})=>{const s=r.map(((n,s)=>{const{xScanStart:o,yScanStart:h}=l(e,t,r[s],a);return c(e,t,n,a,i,o,h)})).map(((i,s)=>{const{zScanStart:o,zAxisScans:h}=l(e,t,r[s],a);let c=[];for(let r=o;r<=o+h;r+=n){const a=e.data[r],n=t.data[0];c.push(i(a.data,n.data))}return c})),{zScanStart:o,xScanStart:h,yScanStart:d}=l(e,t,r[0],a);return[s,(e=null)=>null==e?{useEveryXPixel:i,useEveryXLayer:n}:{x:e.x*i+h,y:e.y*i+d,z:e.z*n+o}]})(e,t,r,a,{useEveryXPixel:n,useEveryXLayer:i});return[o.map((e=>u({result:e,crop:t,convertPosition:h,threshold:s}))).reduce(((e,t)=>e.concat(t)),[]),h,o]},p=e=>e.reduce(((e,t)=>null==t?e:t.difference<e.difference?t:e),{difference:Number.MAX_VALUE}),m=(e,t,r=!1)=>{const a=((e,t)=>{const r=[];return null!=e&&null!=e||r.push("The source image provided is not defined"),null!=t&&null!=t||r.push("The cropped image provided is not defined"),(e.data.length<t.data.length||e.dimensions.width<t.dimensions.width||e.dimensions.height<t.dimensions.height)&&r.push("The source image provided is smaller than the cropped image"),e.data.length==t.data.length&&e.dimensions.width==t.dimensions.width&&e.dimensions.height==t.dimensions.height&&r.push("The crop provided is the same size as the source image"),r})(e,t);if(a.length>0)return{errors:a};console.time("pipeline");const{errors:n,pipeline:i,positions:s,bestPosition:o}=((e,t,r)=>{const a=[];for(const[n,i]of r.entries()){const{useEveryXPixel:r,useEveryXLayer:s,threshold:o}=i;if(0===n){const[n,i,h]=g(e,t,{useEveryXPixel:r,useEveryXLayer:s,threshold:o});a.push([n,i,h]);continue}if(null==a[n-1][0]||0===a[n-1][0].length)return{errors:["No match found"]};if(!a[n-1][0].some((e=>null!=e)))return{errors:["No match found"]};const h=[p(a[n-1][0])],[c,d,l]=y(e,t,h,a[n-1][1],{useEveryXPixel:r,useEveryXLayer:s,threshold:o});a.push([c,d,l])}return{pipeline:a,positions:a[a.length-1],bestPosition:p(a[a.length-1][0])}})(e,t,r?[{useEveryXPixel:5,useEveryXLayer:50,threshold:.1},{useEveryXPixel:1,useEveryXLayer:1,threshold:.03}]:[{useEveryXPixel:10,useEveryXLayer:50,threshold:.1},{useEveryXPixel:10,useEveryXLayer:5,threshold:.06},{useEveryXPixel:1,useEveryXLayer:1,threshold:.01}]);return console.timeEnd("pipeline"),{errors:n,pipeline:i,positions:s,bestPosition:o}},f=e=>{null!=e&&null!=e&&e.forEach((e=>(e=>{console.error(e),alert(e)})(e)))},v=async({imagePath:e=null,arrayBuffer:n=null})=>{if(null==e&&null==n)return{errors:["No image provided"]};if(null!=e){const t=(e=>{const t=[];return null!=e&&null!=e||t.push("No image path provided"),t})(e);if(0!=t.length)return{errors:t};n=await(async e=>{const t=await r.get(e,{responseType:"arraybuffer"});return a.Buffer.from(t.data,"utf-8")})(e)}let i;try{i=t(n)}catch(s){return{errors:["An image provided is not a tiff. Currently this tool only accepts tiffs."]}}return{data:i}},x=({errorHandler:e=f,callback:t})=>async r=>{const a=r.target.files[0],n=await a.arrayBuffer(),{data:i,errors:s}=await v({arrayBuffer:n,getImageDimensions:async()=>{const e=window.URL.createObjectURL(a);return await(e=>new Promise((t=>{const r=new Image;r.onload=()=>{t({imageHeight:r.height,imageWidth:r.width})},r.src=e})))(e)}});e(s),null!=i&&t({data:i,dimensions:{width:i[0].imageWidth,height:i[0].imageLength}})},E=(e,t,r,{strokeColor:a="rgb(64, 196, 82)",highlightColor:n="rgba(64, 196, 82, 0.3)"}={})=>{const i=e.getContext("2d");i.fillStyle=n,i.strokeStyle=a;const{x:s,y:o}=t,{w:h,h:c}=r;i.fillRect(s,o,h,c),i.strokeRect(s,o,h,c)},L=({imageData:e,width:t,height:r,canvasElement:a,imageRange:i=[0,255],colorScale:s="greys"})=>{const o=new n({canvas:a,data:e,width:t,height:r,domain:i,colorScale:s,useWebGL:!1});return o.render(),o};function X(e,t,r){return e+r*t}const w=(e,t,r,a)=>{let n=new i(t,r,e,{kind:"GREY"});return n=n.rotate(-a,{interpolation:"bilinear"}),n},P=(e,t)=>{const r=e.parent.width,a=Math.abs(r*Math.sin(b(t))),n=a/(Math.abs(r*Math.cos(b(t)))+a)*r,i=Math.trunc(n*Math.cos(b(t))),s=Math.trunc(a-n*Math.sin(b(t))),o=e.width-s-i,h=e.height-i-s;return e=e.crop({x:i,y:s,width:o,height:h})},b=e=>e*Math.PI/180,S=(e,t)=>(e.imageWidth=e.width,e.imageLength=e.height,Array.from({length:t},(t=>e))),M={sourceImage:null,crop:null},W=(e,t)=>{if(e){const r=M.crop.data[0],a=((e,t,r,a,n=1)=>{let i=w(e,t,r,a);return i=P(i,a),S(i,n)})(r.data,r.imageWidth,r.imageLength,t,M.crop.data.length);M.crop={data:a,dimensions:M.crop.dimensions,angle:t,isRotated:e}}else{const e=((e,t,r,a,{width:n=100,height:s=100}={})=>{let o=new i(t,r,e,{kind:"GREY"});const h=Math.min(n,t),c=Math.min(s,r);return o=o.crop({x:0,y:0,width:h,height:c}),S(o,a)})(M.crop.data[0].data,M.crop.dimensions.width,M.crop.dimensions.height,M.crop.data.length,{width:150,height:150});M.crop={data:e,dimensions:M.crop.dimensions}}},z=({isRotated:e,position:t,sourceCanvas:r})=>{if(e){const e={width:M.crop.data[0].imageWidth,height:M.crop.data[0].imageLength},{position:a,width:n,height:i}=((e,t,r)=>({position:{x:e.x-Math.round((r.width-t.width)/2),y:e.y-Math.round((r.height-t.height)/2),z:e.z},width:r.width,height:r.height}))(t,e,M.crop.dimensions);M.crop.position=a,E(r,a,{w:n,h:i})}else{const{position:e,width:a,height:n}=((e,t)=>({position:{x:e.x,y:e.y,z:e.z},width:t.width,height:t.height}))(t,M.crop.dimensions);M.crop.position=e,E(r,e,{w:a,h:n})}},R=()=>{if(null==M.sourceImage||null==M.crop)return;const{isRotated:e,angle:t}=(e=>{const{data:t,imageWidth:r,imageLength:a}=e.data[0],n=t[X(0,0,r)],i=t[X(r,0,r)],s=t[X(0,a-1,r)],o=t[X(r-1,a-1,r)];if(0!==n||0!==i||0!==s||0!==o)return{isRotated:!1};let h=r;for(let g=r-1;g>=0&&0===t[X(g-1,0,r)];g--)h=g;let c=0;for(let g=1;g<=a&&0===t[X(r-1,g,r)];g++)c=g;if(h===r&&0===c)return{isRotated:!1};const d=r-h,l=.5*d*c;let u=0;for(let g=h;g<r;g++)for(let e=0;e<c;e++)0===t[X(g,e,r)]&&u++;return u/l<.45?{isRotated:!1}:{isRotated:!0,angle:180*Math.atan(c/d)/Math.PI}})(M.crop);W(e,t);const{errors:r,bestPosition:a}=m(M.sourceImage,M.crop,e);f(r);const n=document.querySelector("#source-image-canvas"),i=M.sourceImage.data[0];if(L({imageData:i.data,width:i.imageWidth,height:i.imageLength,canvasElement:n}),null!=r&&r.length>0)return;const s={x:a.x,y:a.y,z:a.z+1};M.crop.position=s;const o=M.sourceImage.data[s.z-1];L({imageData:o.data,width:o.imageWidth,height:o.imageLength,canvasElement:n}),z({isRotated:e,position:s,sourceCanvas:n}),I()},I=()=>{document.querySelector("#info-area").style.visibility="visible";const e=`${M.crop.position.x}-${M.crop.position.x+M.crop.dimensions.width}`,t=`${M.crop.position.y}-${M.crop.position.y+M.crop.dimensions.height}`,r=`${M.crop.position.z}-${M.crop.position.z+M.crop.data.length}`,a=null!=M.crop.isRotated?`${Math.round(M.crop.angle)}`:"",n=`Crop Position: <br> x - ${e}, y - ${t}, z - ${r} ${null!=M.crop.isRotated?`<br> Rotated - ${a}°`:""}`;document.querySelector("#crop-info").innerHTML=n},$=x({callback:e=>{M.sourceImage=e,R()}}),A=x({callback:e=>{M.crop=e,R()}});document.querySelector("#source-image-input").addEventListener("change",$),document.querySelector("#crop-image-input").addEventListener("change",A);
